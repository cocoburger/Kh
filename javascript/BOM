<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BOM(BrowserObjectMode</title>
</head>
<body>
    <h2>브라우저에 대한 정보를 가지고 있는 객체들</h2>
    <p>
        screen, navigatro, history, location이 있음
        거의 대부분의 객체는 정보를 제공하는 용도로 사용
    </p>

    <h3>screen</h3>
    <p>
        window객체의 property객체로 client화면에 대한 정보를 가지고 있는 객체
    </p>
    <button onclick="screenInfo();">스크린정보</button>
    <div id="screenArea"></div>
    <script>
        const screenInfo=()=>{
            let info=document.getElementById("screenArea");
            console.log(window.screen);
            console.log(screen);
            for(let key in screen){
                info.innerHTML+=`${key} -> ${screen[key]}<br>`;
            }
        }
    </script>
    <h3>navigator객체 알아보기</h3>
    <p>
        window객체의 property객체로 client브라우저에 대한 정보를 가지고 있음
    </p>
    <button onclick="naviInfo();">정보확인</button>
    <div id="naviInfo"></div>
    <script>
        const naviInfo=()=>{
            let area=document.getElementById("naviInfo");
            console.log(navigator);
            for(let key in navigator){
                area.innerHTML+=`${key} -> ${navigator[key]}<br>`;
            }

            //위도/경도 알아보기
            navigator.geolocation.getCurrentPosition((position)=>{
                console.log(position);
                area.innerHTML+=`위도 : ${position.coords.latitude} 경도 : ${position.coords.longitude}<br>`;
            });
        }
    </script>

    <h3>location객체에 대해 알아보자</h3>
    <p>
        window객체의 property객체로 브라우저의 URL정보를 가지고 있는 객체
        URL를 수정할 수 있는 함수도 가지고 있음. ->페이지를 이동시키는 기능
        * 주로 페이지를 변경할 때 많이 사용함
        assign() / replace() /reload()
    </p>
    <button onclick="locationInfo();">정보확인</button>
    <div id="locInfo"></div>
    <h4>페이지 이동시키기</h4>
    <p>href속성을 변경해서 이동하기</p>
    <button onclick="location.href='http://www.youtube.com'">유튜브이동</button>
    <p>함수를 이용해서 이동하기</p>
    <p>assign() : 이동시 기록남김(뒤로가기 가능) / replace() : 이동시 기록 남기지 않아 (뒤로가기 불가능)</p>
    <button onclick="location.assign('http://www.iei.or.kr')">KH정보교육원</button>
    <BUtton onclick="location.replace('http://www.netflix.com')">넷플릭스</BUtton>
    <button onclick="location.reload();">새로고침</button>
    <script>
        const locationInfo=()=>{
            let area=document.getElementById("locInfo");
            for(let key in location){
                area.innerHTML+=`${key} -> ${location[key]}<br>`;
            }
        }
    </script>
    <h3>history 객체</h3>
    <p>페이지가 이동한 이력에 대한 정보를 가지고 있는 객체
        * script코드로 수정이 불가능함. 브라우저 영역
    </p>
    <button onclick="history.back();">뒤로가기</button>
    <button onclick="history.forward();">앞으로가기</button>
    <script>
        console.log(history);
    </script>
    <br><br>
    <input type="url", id="url", name="url"><button onclick="openUrl();">새창으로 열기</button>
    <button onclick="replaceOpen();">뒤로가기</button>
    <script>
        const replaceOpen=()=>{
            let url=document.getElemnetById("url").value;
            location.replace(url);
        }
        const openUrl=()=>{
           let url = document.getElementById("url");
           open(url.value,"_blank","width=400,height=400");
        }
       
    </script>
    

   
</body>
</html>
