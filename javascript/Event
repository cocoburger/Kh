<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event</title>
</head>
<body>
    <h2>이벤트속성알아보기</h2>
    <dl>
        <dt>input태그관련이벤트</dt>
        <dd>focus : input태그에 focus되었을 때 발생 * blur발생 후 focus됨</dd>
        <dd>blur : input태그에서 focus가 사라졌을 때 발생 </dd>
        <dd>change : input태그의 value속성이 변경되었을때 발생 * select태그에 이벤트로 많이 사용</dd>
        <dd>submit : input태그의 submit타입을 클릭했을때 발생</dd>
        <dd>reset : input태그의 reset타입을 클릭했을 때 발생</dd>
    </dl>
    <dl>mouse관련 이벤트
        <dd>click : 마우스 좌 클릭했을 때 발생</dd>
        <dd>dbclick : 마우스 더블클릭했을 때 발생</dd>
        <dd>mouseenter : 마우스 (마우스포인터)가 지정된 영역에 들어왔을 때</dd>
        <dd>mouseleave : 마우스(마우스포인터)가 지정된 영역을 벗어났을 때 발생</dd>
    </dl>
    <dl>
        <dt>key관련 이벤트</dt>
        <dd>keyup : 키가 올라왔을때</dd>
        <dd>keydown : 키가 내려갔을 때</dd>
        <dd>keypress : 키가눌렸을 때</dd>
    </dl>
    <dl>
        <dt>윈도우 이벤트</dt>
        <dd>load : 페이지의 태그들을 모두 읽고난 후 발생</dd>
        <dd>resize : 윈도우 크기가 조정됐을 때 발생</dd>
        <dd>scroll : 창에서 스크롤이 조정됐을 때 발생</dd>

    </dl>

    <h2>고전이벤트처리방식</h2>
    <p>태그에 있는 속성값에 직접 이벤트핸들러(함수) 대입함.
        태그의 속성명 on이벤트속성명
    </p>
    <div>
        <h3>클릭하면 변경</h3>
        <h3>마우스 올라오면 변경</h3>
        <h3>마우스 나가면 변경</h3>
    </div>

    <script>
        let h3=document.querySelectorAll("div>h3");
        h3[0].onclick=function(){
            this.style.fontSize="30px";
        }
        h3[1].onmouseenter=function(){
            this.style.backgroundColor="lime";
        }
        h3[2].onmouseleave=function(){
            this.style.color="magenta";
        }
    </script>
    <h2>인라인방식</h2>
    <p class="inlineEvent" ondblclick="">인라인방식의 이벤트처리하기
   
        addEventListener()함수를 이용해서 이벤트 핸들러를 등록하는 것
        addEventListener("이벤트속성명", 이벤트핸들러 등록(익명함수));
        * 이벤트속성명에 on사용하지 않음 -> click, mouseenter...
        * 이벤트핸들러 함수에 매개변수도 Event객체를 넣어줌 -> e.target
    </p>
    <form action="">
        <input type="text" name="userId" id="userId">
        <input type="password" name="password" id="password">
        <input type="password" id="pwck"><span id="result"></span><br>
        <select name="title" id="title">
            <option value="서울">서울</option>
            <option value="대전">대전</option>
            <option value="대구">대구</option>
            <option value="부산">부산</option>
        </select>

    </form>
    <script>
        //표준이벤트 방식으로 이벤트 input이벤트 설정하기
        let userId=document.getElementById("userId");
        let pw=document.getElementById("password");
        let pwck=document.getElementById("pwck");
        let title=document.getElementById("title");
        userId.addEventListener("focus",function(e){
            console.log(e); //이벤트 객체를 매개변수로 넣어줌(v8);
            this.style.backgroundColor="coral";
            this.style.color="white";
        });
        userId.addEventListener("blur",(e)=>{
            e.target.style.backgroundColor="white";
            e.target.style.color="black";
        });
        title.addEventListener("change",function(){
            // alert(`select선택! ${this.value}`);
            userId.value=this.value;
        });
        userId.addEventListener("change",function(){
            alert(this.value);
        });
        //input 키보드로 입력받음
        pwck.addEventListener("keyup",function(e){
            if(this.value.length>4){
                if(this.value==pw.value){
                    this.nextElementSibling.innerText="비밀번호가 일치합니다."
                    this.nextElementSibling.style.color="green";
                }elseP
                this.nextElementSibling.innerText="비밀번호가 불일치합니다.";
                this.nextElementSibling.style.color="red";
            }
        });
        userId.addEventListener("keyup",function(e){
            console.log(e.target.value);
        });
    </script>
    <h2>
        마우스 이벤트
    </h2>
    <button onclick="btn">버튼이벤트</button>
    <div></div>
    <h2>마우스이벤트</h2>
    <button id="btn">버튼이벤트</button>
    <div></div>
    <script>
        let btn=document.getElementById("btn");
        btn.addEventListener("dblclick",function(){
            console.log(arguments);
            let h2=document.createElement("h2");
            h2.innerText="더클클릭으로 생성";
            this.nextElementSibling.appendChild(h2);
        });
    </script>
    <h2>윈도우에 이벤트설정하기</h2>
    <script>
        window.addEventListener("resize",function(e){
            console.log(e);
            //변경된 window크기확인
            console.log(e.target.innerWidth,e.target.innerText);
        });
        window.addEventListener("scroll",function(){
            console.log(window.scrollX,this.scrollY);
        });
    </script>

    <h3>생성된 태그에 이벤트 설정하기</h3>
    <p>
        생성된 태그에 이벤트를 설정하는 방법은?
        createElement().addEventListener로 이벤트 핸들러 연결하면됨.
    </p>
    <button onclick="addEvent();">이벤트가 설정된 태그</button>
    <div id="eventContainer"></div>
    <script>
        const addEvent=()=>{
            let img=document.createElement("img");
            img.style.width="200px";
            img.style.height="200px";
            img.src="아이유1.jpg";
            //생성된 태그에 이벤트 설정하기
            img.addEventListener("click",function(e){
                this.style.border="3px dotted magenta";
                this.style.boxShadow="3px 3px 5px yellow";
                this.style.borderRadius="100px";
            });
            document.getElementById("eventContainer").appendChild(img);
        }
    </script>
    <!-- 5*5테이블을 생성하고, 테이블의 마지막열에는 버튼태그를 추가할 것
    그 버튼태그를 클릭하면 클릭한 그 행의 배경색이 gold로 변경하세요 -->
    <div id="div"></div>
    <!-- <script>
        let count=0;
        const table=()=>{
        const table = document.createElement("table");
        for (let i = 0; i < 5; i++) {
            const tr = document.createElement("tr");
            btn.setAttribute("onclick","버튼");
                for(let j =0; j<5; j++){
                const td = document.createElement("td");
                let btn = document.createElement("button");
                
                td.innerText=++count;
                tr.appendChild(td);
               
            }
            table.appendChild(tr);
        }
        let t = document.querySelectorAll("table>tr>td");
        document.getElementById("div").appendChild(table);
        document.getElementById("div").appendChild(btn);
        document.getElementsByTagName("td").appendChild("btn");
        table.setAttribute("height","300");
        table.setAttribute("width","300");
        table.setAttribute("border","1");
        }
        let target=document.getElementById("childTest");
            let p = document.createElement("p");
            p.innerText="이건 추가되는 p";
            target.insertAdjacentElement("beforeend",p);
    </script> -->
    <button id="createTable">테이블생성!</button>
    <script>
         document.getElementById("createTable").addEventListener("click",function(){
                let table=document.createElement("table");
                for(let i=0; i<5; i++){
                    let tr=document.createElement("tr");
                    for(let j=0; j<5; j++){
                        let td=document.createElement("td");
                        if(j<4){
                            td.innerText=`${i+1}행 ${j+1}열`;
                        }else{
                            let btn=document.createElement("button");
                            btn.innerHTML="변경";
                            btn.addEventListener("click",function(e){
                                // alert("클릭해즘!");
                                e.target.parentElement.parentElement.style.backgroundColor="lime";
                            });
                            td.appendChild(btn);
                            td.style.border="1px solid black";
                            tr.appendChild(td);

                        }
                    }
                table.setAttribute("height","300");
                table.setAttribute("width","300");
                table.setAttribute("border","1");
                table.appendChild(tr);
            }
            this.insertAdjacentElement("afterend",table);
        });
    </script>

    <h1>기본으로 설정된 이벤트 차단하기</h1>
    <p>
        a : 클릭 시 페이지이동함
        input type=submit : 클릭시 데이터 전송
    </p>
    <a href="http://www.naver.com" onclick="stopMove(event);">네이버</a>
    <a id="check" href="http://www.iei.or.kr">kh정보교육원</a>
    <script>
        document.getElementById("check").addEventListener("click",(e)=>{
            e.preventDefault();
        });

        const stopMove=(e)=>{
            // console.log(e); 
            //기본 이벤트를 차단하려면 preventDefault();사용
            e.preventDefault();
        }
    </script>
    <form action="">
        <input type="text" name="userId">
        <input type="password" name="password">
        <input type="submit" value="로그인" onclick="return checkData();">
    </form>

    <script>
        //submit에 click이벤트의 반환값이 false이면 데이터를 전송하지 않음
        const checkData=()=>{
            let userId=document.querySelectorAll("[name=userId]")[1];
            if(userId.value.length<4){
                alert("아이디는 4글자이상 입력하세요");
                userId.value="";
                userId.focus();
                return false;
            }

        }
    </script>
</body>
</html>
